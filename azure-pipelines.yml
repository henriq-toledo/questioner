# Azure DevOps Pipeline

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureSubscriptionSetting: $(azureSubscription)

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud connection'
    organization: 'ht-sonar'    
    projectKey: 'ht_questioner'
    projectName: 'questioner'
    sources: './src/Questioner'
    extraProperties: |
      sonar.exclusions=src/Questioner/Questioner.Web/wwwroot/lib/bootstrap/dist/css/bootstrap-reboot.css,src/Questioner/Questioner.Web/wwwroot/lib/bootstrap/dist/css/bootstrap.css,src/Questioner/Questioner.Web/wwwroot/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js
      sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
      sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True
    projects: '**/Questioner.Web.csproj'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()